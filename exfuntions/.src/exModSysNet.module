' Gambas module file

'' Se detecta toda informacion de red usando `/sbin/ifconfig` <br>esto es estandar en linux y mac 
'' por ende es seguro usar ruta absoluta.<br>
'' <br>
'' Ofrece ip activa (cual se usa para obetenr los bytes de internet/red activa)
'' y las ip configuradas del sistema activas, tambien los dispositivos equivalentes a las ip activas.<br>
'' Las llamadas de las funciones necesitan `netstat`, `ifconfig`, `awk`, `grep` y `head`, 
'' los paquetes son al menos en linux: ** coreutils ** (`cut`,`head`), **net-tools** (`netstat`,`ifconfig`), 
'' asi como **nawk/gawk ** (`awk`), **grep** (`grep`) y **sed** (`sed`), en mac todos siempre estan.<br>
'' * los paquetes **coreutils** y **net-tools** siempre estaran tanto en linux como en mac.
'' * los paquetes **nawk/gawk**, **sed**, **grep**, se exige esten instalados en ***modSysInfo*** rutina.

Export


Private commandshelltmp As String   '' variable interna para manejar el comando ejecutado en la rutina invocada
Private outputfunction As String    '' variable interna para resultado del comando ejecutado en la rutina invocada
Public _requisites As String = "awk,ifconfig,sh,bash,less,head,tail"


Public Function getIfdef() As String    '' obtener la interfaz que se usa para enviar y recibir datos en la red/internet de todas las activas
    
    commandshelltmp = "netstat -rn | awk '/^0.0.0.0/ {thif=substr($0,74,10); print thif;} /^default.*UG/ {thif=substr($0,65,10); print thif;}' | head -1"
    ' based on http://gambaswiki.org/wiki/doc/shellexec seems its quite complicated call exec.. o lest get hurry now:
    Shell commandshelltmp To outputfunction
    Return Replace(outputfunction, "\n", " ")
    
End


Public Function getIpdef(Optional defIf As String = getIfdef()) As String    '' obtener la ip que se usa para enviar y recibir datos en la red/internet de todas las activas<br> si @param defif se provee se usara este dispositivo de red como el activo para optener la ip
    
    commandshelltmp = "/sbin/ifconfig " & defIf & " | grep -Eo 'inet (addr:)?([0-9]*\\.){3}[0-9]*' | grep -Eo '([0-9]*\\.){3}[0-9]*' | grep -v '127.0.0.1' | head -1"
    ' el "\" es escape.. re-escapar, ademas /sbin/ifconfig es estandar en MACOS y LINUX se debe usar fullpath para no ser root o usar como usuario normal
    Shell commandshelltmp To outputfunction
    Return Replace(outputfunction, "\n", " ")
    
End

Public Function getIfall() As String    '' obtener todas las interfaces de red activas de las disponibles
    
    commandshelltmp = ""
    ' el "\" es escape.. re-escapar, ademas /sbin/ifconfig es estandar en MACOS y LINUX se debe usar fullpath para no ser root o usar como usuario normal
    Shell commandshelltmp To outputfunction
    Return Replace(outputfunction, "\n", " ")
    
End

Public Function getIpall() As String    '' obtener todas las ip/direcciones de red activas de las configuradas
    
    commandshelltmp = "/sbin/ifconfig | sed -En 's/127.0.0.1//;s/.*inet (addr:)?(([0-9]*\\.){3}[0-9]*).*/\\2/p'"
    ' el "\" es escape.. re-escapar, ademas /sbin/ifconfig es estandar en MACOS y LINUX se debe usar fullpath para no ser root o usar como usuario normal
    Shell commandshelltmp To outputfunction
    Return Replace(outputfunction, "\n", " ")
    
End

